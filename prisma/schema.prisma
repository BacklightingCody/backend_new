generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用户角色枚举
enum UserRole {
  USER
  ADMIN
}

// 用户状态枚举
enum UserStatus {
  ACTIVE
  BANNED
  PENDING
}

model User {
  id        Int     @id @default(autoincrement())
  clerkId   String? @unique // 可选，用于 Clerk 用户
  email     String  @unique
  username  String?
  firstName String?
  lastName  String?
  imageUrl  String?

  passwordHash String?    @map("password_hash") // 若为自定义登录用户则使用
  role         UserRole   @default(USER)
  status       UserStatus @default(ACTIVE)

  sessions Session[] // 自定义登录 session 管理
  articles Article[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Session {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int      @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")

  @@map("sessions")
}

model Article {
  id        Int       @id @default(autoincrement())
  title     String    @db.VarChar(256)
  content   String    @db.Text
  summary   String?   @db.Text
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at")
  user      User      @relation(fields: [userId], references: [id])
  userId    Int       @map("user_id")
  messages  Message[]

  @@map("articles")
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String   @db.Text
  createdAt DateTime @default(now()) @map("created_at")
  article   Article  @relation(fields: [articleId], references: [id])
  articleId Int      @map("article_id")

  @@map("messages")
}
