generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum UserStatus {
  ACTIVE
  BANNED
  PENDING
}

model User {
  id        Int     @id @default(autoincrement())
  clerkId   String? @unique
  email     String  @unique
  username  String?
  firstName String?
  lastName  String?
  imageUrl  String?

  passwordHash String?    @map("password_hash")
  role         UserRole   @default(USER)
  status       UserStatus @default(ACTIVE)

  sessions Session[]
  articles Article[]
  messages Message[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Session {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int      @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")

  @@map("sessions")
}

model Article {
  id         Int      @id @default(autoincrement())
  slug       String   @unique @db.VarChar(256) // URL 唯一标识
  title      String   @db.VarChar(256)
  summary    String?  @db.Text
  content    String   @db.Text // Markdown 源内容
  html       String?  @db.Text // 可选的 Markdown 转 HTML 缓存
  coverImage String?  @map("cover_image") // 封面图路径
  readTime   String?  @map("read_time") // 估算阅读时间（如：6分钟阅读）
  category   String   @db.VarChar(64)
  tags       String[] // PostgreSQL 字符串数组

  likes     Int @default(0)
  bookmarks Int @default(0)
  comments  Int @default(0)

  userId   Int       @map("user_id")
  user     User      @relation(fields: [userId], references: [id])
  messages Message[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("articles")
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String   @db.Text
  createdAt DateTime @default(now()) @map("created_at")

  articleId Int     @map("article_id")
  article   Article @relation(fields: [articleId], references: [id])

  userId Int  @map("user_id")
  user   User @relation(fields: [userId], references: [id])

  @@map("messages")
}
